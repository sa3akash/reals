# name: Next.js CI/CD with Trivy Security Scan on Tag

# # Run only when a tag is pushed that matches v*, e.g., v1.2.3
# on:
#   push:
#     tags:
#     - 'v*'

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     env:
#       IMAGE_NAME_CLIENT: sa2avroo/testing-nextjs
#       IMAGE_NAME_SERVER: sa2avroo/testing-nodejs

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Set up Node.js
#       uses: actions/setup-node@v3
#       with:
#         node-version: '22' # Adjust as needed

#     - name: Install dependencies
#       run: npm install

#     - name: Run lint
#       run: npm run lint

#     - name: Build Next.js app
#       run: npm run build

#     - name: Extract version from tag
#       id: get_version
#       run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

#     - name: Log in to Docker Hub
#       uses: docker/login-action@v3
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}

#     - name: Build Docker image with latest tag
#       run: |
#         docker build -t ${IMAGE_NAME_CLIENT}:latest ./client
#         docker build -t ${IMAGE_NAME_SERVER}:latest ./server

#     - name: Tag Docker image with version
#       run: |
#         docker tag ${IMAGE_NAME_CLIENT}:latest ${IMAGE_NAME_CLIENT}:${{ steps.get_version.outputs.VERSION }}
#         docker tag ${IMAGE_NAME_SERVER}:latest ${IMAGE_NAME_SERVER}:${{ steps.get_version.outputs.VERSION }}

#     - name: Install Trivy
#       run: |
#         wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.25.0_Linux-64bit.tar.gz
#         tar zxvf trivy_0.25.0_Linux-64bit.tar.gz
#         sudo mv trivy /usr/local/bin/

#     - name: Scan Docker image (latest)
#       run: |
#         trivy image --exit-code 1 --severity HIGH,CRITICAL ${IMAGE_NAME_CLIENT}:latest
#         trivy image --exit-code 1 --severity HIGH,CRITICAL ${IMAGE_NAME_SERVER}:latest
#       continue-on-error: false

#     - name: Scan Docker image (versioned)
#       run: |
#         trivy image --exit-code 1 --severity HIGH,CRITICAL ${IMAGE_NAME_CLIENT}:${{ steps.get_version.outputs.VERSION }}
#         trivy image --exit-code 1 --severity HIGH,CRITICAL ${IMAGE_NAME_SERVER}:${{ steps.get_version.outputs.VERSION }}
#       continue-on-error: false

#     - name: Push Docker images
#       run: |
#         docker push ${IMAGE_NAME_CLIENT}:latest
#         docker push ${IMAGE_NAME_CLIENT}:${{ steps.get_version.outputs.VERSION }}

#         docker push ${IMAGE_NAME_SERVER}:latest
#         docker push ${IMAGE_NAME_SERVER}:${{ steps.get_version.outputs.VERSION }}


name: 🚀 Next.js CI/CD with Trivy Security Scan on Tag

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME_CLIENT: sa2avroo/testing-nextjs

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v3

    - name: 🧰 Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: 📦 Install dependencies
      working-directory: ./client
      run: npm install --legacy-peer-deps

    - name: 🧹 Run lint
      working-directory: ./client
      run: npm run lint

    - name: 🏗️ Build Next.js app
      working-directory: ./client
      run: npm run build

    - name: 🏷️ Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: 🛠️ Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🗃️ Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: 🔐 Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 🐳 Build Docker image (with tags and cache)
      uses: docker/build-push-action@v5
      with:
        context: ./client
        push: false
        tags: |
          ${{ env.IMAGE_NAME_CLIENT }}:latest
          ${{ env.IMAGE_NAME_CLIENT }}:${{ steps.get_version.outputs.VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        load: true  # Needed for Trivy scan

    - name: 📥 Cache Trivy vulnerability DB
      uses: actions/cache@v4
      with:
        path: ~/.cache/trivy
        key: trivy-db-${{ runner.os }}

    - name: 🛡️ Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install -y wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo gpg --dearmor -o /usr/share/keyrings/trivy.gpg
        echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install -y trivy

    - name: 🔍 Scan Docker image (latest)
      run: |
        echo "🔍 Scanning ${IMAGE_NAME_CLIENT}:latest..."
        trivy image --exit-code 1 --severity HIGH,CRITICAL --no-progress ${IMAGE_NAME_CLIENT}:latest

    - name: 🔍 Scan Docker image (versioned)
      run: |
        echo "🔍 Scanning ${IMAGE_NAME_CLIENT}:${{ steps.get_version.outputs.VERSION }}..."
        trivy image --exit-code 1 --severity HIGH,CRITICAL --no-progress ${IMAGE_NAME_CLIENT}:${{ steps.get_version.outputs.VERSION }}

    - name: 📤 Push Docker images
      run: |
        echo "🚀 Pushing Docker images..."
        docker push ${IMAGE_NAME_CLIENT}:latest
        docker push ${IMAGE_NAME_CLIENT}:${{ steps.get_version.outputs.VERSION }}




# ==================================

# git tag v1.2.3
# git push origin v1.2.3 --tags


# ==================================



# name: Next.js CI/CD with Trivy scan

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     env:
#       IMAGE_NAME: your_dockerhub_username/your_image_name

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '16'

#       - name: Install dependencies
#         run: npm install

#       - name: Run lint
#         run: npm run lint

#       - name: Build Next.js app
#         run: npm run build

#       - name: Get version tag
#         id: get_version
#         run: echo "VERSION=$(git describe --tags --always)" >> $GITHUB_ENV

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build Docker image with latest tag
#         run: |
#           docker build -t ${IMAGE_NAME}:latest .

#       - name: Build Docker image with version tag
#         run: |
#           docker tag ${IMAGE_NAME}:latest ${IMAGE_NAME}:${{ env.VERSION }}

#       - name: Install Trivy
#         run: |
#           wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.25.0 Linux-64bit.tar.gz
#           tar zxvf trivy_0.25.0 Linux-64bit/trivy
#           sudo mv Linux-64bit/trivy /usr/local/bin/

#       - name: Scan Docker image with Trivy (latest)
#         run: |
#           trivy image --exit-code 1 --severity HIGH,CRITICAL ${IMAGE_NAME}:latest
#         continue-on-error: false

#       - name: Scan Docker image with Trivy (version)
#         run: |
#           trivy image --exit-code 1 --severity HIGH,CRITICAL ${IMAGE_NAME}:${{ env.VERSION }}
#         continue-on-error: false

#       - name: Push Docker images
#         run: |
#           docker push ${IMAGE_NAME}:latest
#           docker push ${IMAGE_NAME}:${{ env.VERSION }}
